<% context = local_assigns[:context] || :order %>

<% if context == :order %>
<p>
  <%= promotion_rule.class.human_attribute_name(:description) %>
</p>
  <%= fields_for param_prefix, promotion_rule do |form| %>
    <div class="field products_rule_products">
      <%= form.label :product_ids_string, t('solidus_friendly_promotions.product_rule.choose_products') %>
      <%= form.hidden_field :product_ids_string, value: promotion_rule.product_ids.join(","), class: "product_picker fullwidth" %>
    </div>

    <div class="field">
      <%
        match_policy_options = options_for_select(
          SolidusFriendlyPromotions::Rules::Product::MATCH_POLICIES.map { |s| [t("solidus_friendly_promotions.product_rule.match_#{s}"),s] },
          promotion_rule.preferred_match_policy
        )
      %>
      <% select = form.select :preferred_match_policy, match_policy_options %>
      <%= form.label :preferred_match_policy, t('solidus_friendly_promotions.product_rule.label', select: select).html_safe %>
      </label>
    </div>

    <div class="field">
      <%= form.label :preferred_line_item_applicable do %>
        <%= form.check_box :preferred_line_item_applicable %>
        <%= promotion_rule.class.human_attribute_name(:preferred_line_item_applicable) %>
      <% end %>
    </div>
  <% end %>
<% else %>
  <p>
    <% match_policy_translation_key = promotion_rule.preferred_match_policy == "none" ? :exclude : :include %>
    <%= t(match_policy_translation_key, scope: [:solidus_friendly_promotions, :promotion_rules, :line_item_product, :match_policies]) %>
  </p>
  <ul>
    <% promotion_rule.products.each do |product| %>
      <li>
        <%= product.name %>
      </li>
    <% end %>
  </ul>
<% end %>
